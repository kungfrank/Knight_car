<launch>
    <arg name="veh"/>
    <arg name="local" default="false" doc="true to launch locally on laptop. false to launch of vehicle"/>
    <arg name="config" default="baseline" doc="Specify a config."/>
    <arg name="param_file_name" default="default" doc="Specify a param file. ex:megaman"/>
    <arg name="pkg_name" default="dagu_car" doc="name of the package"/>
    <arg name="node_name" default="wheels_trimmer_node" doc="name of the node"/>
    
    <group ns="$(arg veh)">
        <!-- Run on local (laptop) -->
        <node if="$(arg local)" pkg="$(arg pkg_name)" type="$(arg node_name).py" name="$(arg node_name)" output="screen">
            <rosparam command="load" file="$(find duckietown)/config/$(arg config)/calibration/wheels_trim/$(arg veh).yaml"/>
        </node>

        <!-- Run on remote (vehicle) -->
        <include unless="$(arg local)" file="$(find duckietown)/machines"/>
        <node unless="$(arg local)" machine="$(arg veh)" pkg="$(arg pkg_name)" type="$(arg node_name).py" name="$(arg node_name)" output="screen">
            <rosparam command="load" file="$(find duckietown)/config/$(arg config)/calibration/wheels_trim/$(arg veh).yaml"/>
        </node>
    </group>

    <!-- Subscriptions -->
    <!-- "~wheels_cmd": duckietown_msgs/WheelsCmd. Input of untrimmed wheels command.-->
    <!-- Publications -->
    <!-- "~trimmed_wheels_cmd" : duckietown_msgs/WheelsCmd. Output of trimmed wheels command according to the ~trim parameter -->
</launch>
