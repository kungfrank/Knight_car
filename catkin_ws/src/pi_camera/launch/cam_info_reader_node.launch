<launch>
	<arg name="veh"/>
	<arg name="config" default="baseline"/>
	<arg name="local" default="false"/>
	<arg name="param_file_name" default="default" doc="Specify a param file. ex:megaman"/>
	<arg name="pkg_name" value="pi_camera"/>
	<arg name="node_name" default="cam_info_reader_node"/>
	<arg name="image_type" default="compressed" />
    <arg name="cali_file_name" default="$(arg veh)" />

	<!-- Run on local (laptop) -->
	<node if="$(arg local)" ns="$(arg veh)" pkg="pi_camera" type="cam_info_reader_node.py" name="$(arg node_name)" output="screen" clear_params="true" required="true">
		<!-- These are special in that the configs are set as parameter and should alway obey the arg -->
		<rosparam command="load" file="$(find duckietown)/config/$(arg config)/pi_camera/cam_info_reader_node/$(arg param_file_name).yaml"/>
		<param name="~config" value="$(arg config)"/>
		<param name="~cali_file_name" value="$(arg cali_file_name)"/>
		<param name="~image_type" value="$(arg image_type)"/>
	</node>

	<!-- Run on remote (vehicle) -->
	<include unless="$(arg local)" file="$(find duckietown)/machines"/>
	<node unless="$(arg local)" ns="$(arg veh)" machine="$(arg veh)" pkg="pi_camera" type="cam_info_reader_node.py" name="$(arg node_name)" output="screen" clear_params="true" required="true">
		<rosparam command="load" file="$(find duckietown)/config/$(arg config)/pi_camera/cam_info_reader_node/$(arg param_file_name).yaml"/>
		<!-- These are special in that the configs are set as parameter and should alway obey the arg -->
		<param name="~config" value="$(arg config)"/>
		<param name="~cali_file_name" value="$(arg cali_file_name)"/>
		<param name="~image_type" value="$(arg image_type)"/>
	</node>	

	<!-- Publication -->
	<!-- "~camera_info": sensor_msgs/CameraInfo. Publishing camera info load from yaml file specified by parameters-->
	
	<!-- Subscription -->
	<!-- "~compressed_image": sensor_msgs/CompressedImage. Input compressed image for the time stamp of the camera_info-->
</launch>
